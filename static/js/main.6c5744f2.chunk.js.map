{"version":3,"sources":["assets/ct-radio-selected.svg","assets/ct-radio-deactivated.svg","assets/vm-logo-primary.svg","assets/ic-clear.svg","assets/ic-large-email-generic.svg","containers/header.js","containers/invited-alert.js","containers/personal-alert.js","containers/email-form.js","containers/get-started.js","containers/domain-input.js","containers/company-sign-up.js","containers/join-team.js","containers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","Component","InvitedAlert","onClick","this","props","onInvitedAlertClose","clear","emailGeneric","PersonalAlert","type","value","onPersonalEmailBack","onPersonalEmailConfirm","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","personalEmail","continuePersonal","onEmailEntered","state","onEmailChange","e","console","log","email","target","alreadySignedUp","alreadyInvited","onButtonPress","preventDefault","joinTeamTest","submitted","renderEmailTakenAlert","onSubmit","placeholder","onChange","renderInvited","renderPersonal","invited_alert_InvitedAlert","href","personal_alert_PersonalAlert","GetStarted","onFirstNameChange","firstName","onLastNameChange","lastName","onDisplayNameChange","displayName","onPasswordChange","password","onCompanyNameChange","companyName","existingCompany","onGetStartedSubmit","renderCompanyExistsAlert","disabled","DomainInput","inputKeyDown","val","key","domains","find","domain","toLowerCase","newStateDomains","concat","toConsumableArray","domainInput","onDomainArrChange","removeDomain","length","i","newDomains","splice","_this2","map","conditionalItemClass","xmlns","width","height","viewBox","d","id","onKeyDown","ref","c","emailIsSelected","CompanySignup","onSelectDomains","anyFromDomains","inviteOnly","onSelectInviteOnly","onCompanySignupSubmit","radioSelected","radioDeactivated","fromAnyDomains","domain_input_DomainInput","JoinTeam","Root","isExistingCompany","childState","emailEntered","alreadySignedup","nonExistingSignup","companySignup","header_Header","Route","exact","path","render","email_form_Form","assign","get_started_GetStarted","company_sign_up_CompanySignup","component","renderGetStarted","location","pathname","renderTerms","renderCompanySignup","renderJoinTeamTest","Redirect","to","routing","HashRouter","Index","ReactDOM","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6OCGnBC,mLAEb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,UAG7CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,6BAKJH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAlB,kBAdoBI,+CCCfC,mLAGb,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,QAAMO,QAASC,KAAKC,MAAMC,qBACtBZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,SAGAH,EAAAC,EAAAC,cAAA,OAAKE,IAAKS,IAAOV,UAAU,UAAUG,IAAI,cAG7CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKU,IAAcX,UAAU,aAAaG,IAAI,gBAEvDN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,uBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,mHAnB0BI,aCFrBQ,mLAGb,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,mCAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,qFAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,SAASC,MAAM,OAAOd,UAAU,uBAAuBM,QAASC,KAAKC,MAAMO,qBAC5ElB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,SAIZH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,SAASC,MAAM,OAAOd,UAAU,2BAA2BM,QAASC,KAAKC,MAAMQ,wBAChFnB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAAhB,sBAlBWI,aCEtBa,cACjB,SAAAA,EAAYT,GAAM,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAU,IACdC,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAhB,KAAMC,KAcVQ,uBAAyB,WACrBE,EAAKM,SAAS,CAACC,eAAe,IAC9BP,EAAKM,SAAS,CAACE,kBAAkB,IACjCR,EAAKV,MAAMmB,eAAeT,EAAKU,QAlBjBV,EAqBlBH,oBAAsB,WAClBG,EAAKM,SAAS,CAACC,eAAe,KAtBhBP,EAyBlBW,cAAgB,SAACC,GACbC,QAAQC,IAAId,EAAKV,OACjBU,EAAKM,SAAS,CAAES,MAAOH,EAAEI,OAAOpB,QAChCI,EAAKM,SAAS,CAACW,iBAAiB,KA5BlBjB,EAgClBT,oBAAsB,WAClBS,EAAKM,SAAS,CAACY,gBAAgB,KAjCjBlB,EAqClBmB,cAAgB,SAACP,GAEb,OADAA,EAAEQ,iBACKpB,EAAKU,MAAMK,OACd,IAAK,oBACDf,EAAKM,SAAS,CAACY,gBAAgB,IAC/B,MACJ,IAAK,iBACDlB,EAAKM,SAAS,CAACW,iBAAiB,IAChC,MACJ,IAAK,oBACDjB,EAAKM,SAAS,CAACe,cAAc,IACjC,IAAK,oBACErB,EAAKU,MAAMF,iBACVR,EAAKV,MAAMmB,eAAeT,EAAKU,OAE/BV,EAAKM,SAAS,CAACC,eAAe,IAElC,MACJ,QACIP,EAAKV,MAAMmB,eAAeT,EAAKU,SArDvCV,EAAKU,MAAQ,CACTK,MAAO,GACPO,WAAW,EACXJ,gBAAgB,EAChBD,iBAAiB,EACjBV,eAAe,EACfC,kBAAkB,EAClBa,cAAc,GAVJrB,wEA8Dd,OACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,oCAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACVO,KAAKqB,MAAMO,iBAAmB5B,KAAKkC,wBACpC5C,EAAAC,EAAAC,cAAA,QAAM2C,SAAUnC,KAAKmC,UACjB7C,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAO8B,YAAY,mBAAmB3C,UAAU,cAAcc,MAAOP,KAAKqB,MAAMK,MAAOW,SAAUrC,KAAKsB,iBAEtHhC,EAAAC,EAAAC,cAAA,UAAQc,KAAK,SAASC,MAAM,OAAOd,UAAU,mBAAmBM,QAASC,KAAK8B,eAC1ExC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,YAOdO,KAAKqB,MAAMQ,gBAAkB7B,KAAKsC,gBAClCtC,KAAKqB,MAAMQ,gBAAkB7B,KAAKqB,MAAMH,cAAgB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAyB,KAChGO,KAAKqB,MAAMH,eAAiBlB,KAAKuC,0DAO3C,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,CAActC,oBAAuBF,KAAKE,sEAIjD,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAAf,4DAC6DH,EAAAC,EAAAC,cAAA,KAAGiD,KAAK,KAAR,SAD7D,OACsFnD,EAAAC,EAAAC,cAAA,KAAGiD,KAAK,KAAR,uBADtF,+CAQR,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,CAAejC,uBAA0BT,KAAKS,uBAAyBD,oBAAsBR,KAAKQ,6BA3G/EX,aCFb8C,cACjB,SAAAA,EAAY1C,GAAM,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAA2C,IACdhC,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAA+B,GAAA3B,KAAAhB,KAAMC,KAaV2C,kBAAoB,SAACrB,GACjBZ,EAAKM,SAAS,CAAE4B,UAAWtB,EAAEI,OAAOpB,SAftBI,EAkBlBmC,iBAAmB,SAACvB,GAChBZ,EAAKM,SAAS,CAAE8B,SAAUxB,EAAEI,OAAOpB,SAnBrBI,EAsBlBqC,oBAAsB,SAACzB,GACnBZ,EAAKM,SAAS,CAAEgC,YAAa1B,EAAEI,OAAOpB,SAvBxBI,EA0BlBuC,iBAAmB,SAAC3B,GAChBZ,EAAKM,SAAS,CAACkC,SAAU5B,EAAEI,OAAOpB,SA3BpBI,EA8BlByC,oBAAsB,SAAC7B,GACnBZ,EAAKM,SAAS,CAACoC,YAAa9B,EAAEI,OAAOpB,QACf,qBAAnBgB,EAAEI,OAAOpB,MACRI,EAAKM,SAAS,CAACqC,iBAAiB,IAEhC3C,EAAKM,SAAS,CAACqC,iBAAiB,KAnCtB3C,EAuClBwB,SAAU,SAACZ,GACPA,EAAEQ,iBACFpB,EAAKV,MAAMsD,mBAAmB5C,EAAKU,QAtCnCV,EAAKU,MAAQ,CACTiC,iBAAiB,EACjBT,UAAW,GACXE,SAAU,GACVE,YAAa,GACbE,SAAU,GACVE,YAAa,IATH1C,wEA8Cd,OACQrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,wHAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVO,KAAKqB,MAAMiC,iBAAmBtD,KAAKwD,2BACpClE,EAAAC,EAAAC,cAAA,QAAM2C,SAAUnC,KAAKmC,UACjB7C,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOb,UAAU,aAAa2C,YAAY,aAAa7B,MAAOP,KAAKqB,MAAMwB,UAAWR,SAAUrC,KAAK4C,oBAC/GtD,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOb,UAAU,aAAa2C,YAAY,YAAY7B,MAAOP,KAAKqB,MAAM0B,SAAUV,SAAUrC,KAAK8C,mBAC7GxD,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOb,UAAU,eAAe2C,YAAY,kEAAkE7B,MAAOP,KAAKqB,MAAM4B,YAAaZ,SAAUrC,KAAKgD,sBACxK1D,EAAAC,EAAAC,cAAA,SAAOc,KAAK,WAAWb,UAAU,WAAW2C,YAAY,WAAW7B,MAAOP,KAAKqB,MAAM8B,SAAUd,SAAUrC,KAAKkD,mBAC9G5D,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOb,UAAU,eAAe2C,YAAY,eAAe7B,MAAOP,KAAKqB,MAAMgC,YAAahB,SAAUrC,KAAKoD,sBACrH9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,SAASC,MAAM,UAAUd,UAAU,qBAAqBgE,WAAWzD,KAAKqB,MAAMiC,iBACvFhE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BAAhB,oEAahC,OACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAAf,qDACsDH,EAAAC,EAAAC,cAAA,KAAGiD,KAAK,KAAR,gBADtD,mCA/EwB5C,uDCAnB6D,cACjB,SAAAA,EAAYzD,GAAM,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAA0D,IACd/C,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAA8C,GAAA1C,KAAAhB,KAAMC,KAOV0D,aAAe,SAACpC,GACZC,QAAQC,IAAId,EAAKV,OACjB,IAAM2D,EAAMrC,EAAEI,OAAOpB,MACrB,GAAa,UAAVgB,EAAEsC,KAAmBD,EAAI,CACxB,GAAGjD,EAAKU,MAAMyC,QAAQC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,gBAAkBL,EAAIK,gBAC9D,OAEJ,IAAIC,EAAe,GAAAC,OAAAvD,OAAAwD,EAAA,EAAAxD,CAAOD,EAAKU,MAAMyC,SAAlB,CAA2BF,IAE9CjD,EAAKM,SAAS,CAAC6C,QAASI,IACxBvD,EAAK0D,YAAY9D,MAAQ,KACzBI,EAAKV,MAAMqE,kBAAkBJ,OACb,cAAV3C,EAAEsC,KAAwBD,GAChCjD,EAAK4D,aAAa5D,EAAKU,MAAMyC,QAAQU,OAAS,IArBpC7D,EAyBlB4D,aAAe,SAACE,GACZ,IAAMC,EAAU9D,OAAAwD,EAAA,EAAAxD,CAAOD,EAAKU,MAAMyC,SAClCY,EAAWC,OAAOF,EAAE,GACpB9D,EAAKM,SAAS,CAAC6C,QAASY,IACxB/D,EAAKV,MAAMqE,kBAAkBI,IA1B7B/D,EAAKU,MAAQ,CACTyC,QAAS,IAJCnD,wEAiCV,IAAAiE,EAAA5E,KACJ,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACRO,KAAKqB,MAAMyC,QAAQe,IAAI,SAACb,EAAQS,GACtB,IAAIK,EAMJ,OAJIA,EADDL,IAAMG,EAAKvD,MAAMyC,QAAQU,OAAS,EACV,iBAEA,GAGvBlF,EAAAC,EAAAC,cAAA,MAAIC,UAAW,oBAAsBqF,EAAsBjB,IAAKG,GAC5D1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBuE,GACjC1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBM,QAAS,WAAQ6E,EAAKL,aAAaE,KAE9DnF,EAAAC,EAAAC,cAAA,OAAKuF,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAAY5F,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoB0F,EAAE,0TAQrJ7F,EAAAC,EAAAC,cAAA,SACIc,KAAK,OACLb,UAAyC,IAA9BO,KAAKqB,MAAMyC,QAAQU,OAAe,gCAAkC,oBAC/EpC,YAA2C,IAA9BpC,KAAKqB,MAAMyC,QAAQU,OAAe,8BAAgC,GAC/EY,GAAIpF,KAAKqB,MAAMyC,QAAQU,OAAS,GAAKxE,KAAKqB,MAAMyC,QAAQU,OAAO,IAAM,EAAI,yBAA2B,OACpGa,UAAWrF,KAAK2D,aAChB2B,IAAM,SAAAC,GAAC,OAAIX,EAAKP,YAAckB,GAC9B9B,UAAUzD,KAAKC,MAAMuF,2BAlEJ3F,aCGpB4F,cAEjB,SAAAA,EAAYxF,GAAM,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAyF,IACd9E,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAA6E,GAAAzE,KAAAhB,KAAMC,KAUVyF,gBAAkB,SAACnE,GACfZ,EAAKM,SAAS,CAAC0E,gBAAgB,EAAMC,YAAY,KAZnCjF,EAelBkF,mBAAqB,SAACtE,GAClBZ,EAAKM,SAAS,CAAC0E,gBAAgB,EAAOC,YAAY,KAhBpCjF,EAoBlB2D,kBAAoB,SAACR,GACjBtC,QAAQC,IAAIqC,GACZnD,EAAKM,SAAS,CAAC6C,QAASA,KAtBVnD,EAyBlBwB,SAAW,SAACZ,GACRZ,EAAKV,MAAM6F,sBAAsBnF,EAAKU,QAvBtCV,EAAKU,MAAQ,CACTuE,YAAY,EACZD,gBAAgB,EAChB7B,QAAS,IANCnD,wEA8Bd,OACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,6IAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OACIE,IAAKM,KAAKqB,MAAMsE,eAAiBI,IAAgBC,IACjDvG,UAAWO,KAAKqB,MAAM4E,eAAiB,uBAAyB,0BAChElG,QAASC,KAAK0F,gBACd9F,IAAKI,KAAKqB,MAAMsE,eAAiB,iBAAmB,sBAExDrG,EAAAC,EAAAC,cAAA,OAAKC,UAAWO,KAAKqB,MAAMsE,eAAiB,2BAA2B,mBAAvE,8BAIArG,EAAAC,EAAAC,cAAC0G,EAAD,CAAaV,gBAAiBxF,KAAKqB,MAAMsE,eAAgBrB,kBAAmBtE,KAAKsE,oBACrFhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OACIE,IAAKM,KAAKqB,MAAMuE,WAAaG,IAAgBC,IAC7CvG,UAAWO,KAAKqB,MAAMuE,WAAa,wBAA0B,2BAC7D7F,QAASC,KAAK6F,mBACdjG,IAAKI,KAAKqB,MAAMuE,WAAa,iBAAmB,sBAEpDtG,EAAAC,EAAAC,cAAA,OAAKC,UAAWO,KAAKqB,MAAMuE,WAAa,4BAA8B,oBAAtE,gBAIJtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,SAASC,MAAM,OAAOd,UAAU,sBAAsBM,QAASC,KAAKmC,SAAUsB,YAAUzD,KAAKqB,MAAMsE,gBAAgD,IAA9B3F,KAAKqB,MAAMyC,QAAQU,SACjJlF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAAhB,oBAjEWI,aCHtBsG,cACjB,SAAAA,EAAYlG,GAAM,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAmG,IACdxF,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAuF,GAAAnF,KAAAhB,KAAMC,KAWV2C,kBAAoB,SAACrB,GACjBZ,EAAKM,SAAS,CAAE4B,UAAWtB,EAAEI,OAAOpB,SAbtBI,EAgBlBmC,iBAAmB,SAACvB,GAChBZ,EAAKM,SAAS,CAAE8B,SAAUxB,EAAEI,OAAOpB,SAjBrBI,EAoBlBqC,oBAAqB,SAACzB,GAClBZ,EAAKM,SAAS,CAAEgC,YAAa1B,EAAEI,OAAOpB,SArBxBI,EAwBlBuC,iBAAmB,SAAC3B,GAChBZ,EAAKM,SAAS,CAACkC,SAAU5B,EAAEI,OAAOpB,SAtBlCI,EAAKU,MAAQ,CACTwB,UAAW,GACXE,SAAU,GACVE,YAAa,GACbE,SAAU,IAPAxC,wEA6Bd,OAEQrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,mHAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOb,UAAU,aAAa2C,YAAY,aAAa7B,MAAOP,KAAKqB,MAAMwB,UAAWR,SAAUrC,KAAK4C,oBAC/GtD,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOb,UAAU,aAAa2C,YAAY,YAAY7B,MAAOP,KAAKqB,MAAM0B,SAAUV,SAAUrC,KAAK8C,mBAC7GxD,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOb,UAAU,eAAe2C,YAAY,kEAAkE7B,MAAOP,KAAKqB,MAAM4B,YAAaZ,SAAUrC,KAAKgD,sBACxK1D,EAAAC,EAAAC,cAAA,SAAOc,KAAK,WAAWb,UAAU,WAAW2C,YAAY,WAAW7B,MAAOP,KAAKqB,MAAM8B,SAAUd,SAAUrC,KAAKkD,mBAC9G5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,SAASC,MAAM,UAAUd,UAAU,oBAC5CH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAhB,wBA9CFI,6BCOjBuG,cAEjB,SAAAA,EAAYnG,GAAM,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAoG,IACdzF,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAwF,GAAApF,KAAAhB,KAAMC,KAqBVoG,kBAAoB,WAChB1F,EAAKM,SAAS,CAACqC,iBAAiB,KAvBlB3C,EA0BlBS,eAAiB,SAACkF,GACd3F,EAAKM,SAAS,CAACsF,cAAc,EAAM7E,MAAO4E,EAAW5E,QACjD4E,EAAWzE,gBAAmByE,EAAWE,iBACzC7F,EAAKM,SAAS,CAACwF,mBAAmB,IAEnCH,EAAWtE,cACVrB,EAAKM,SAAS,CAACe,cAAc,EAAMyE,mBAAmB,EAAOC,eAAe,KAhClE/F,EAoClB4C,mBAAqB,SAAC+C,GAClB3F,EAAKM,SACD,CACI4B,UAAWyD,EAAWzD,UACtBE,SAAUuD,EAAWvD,SACrBE,YAAaqD,EAAWrD,YACxBE,SAAUmD,EAAWnD,SACrBE,YAAaiD,EAAWjD,YACxBqD,eAAe,EACfD,mBAAmB,KA7Cb9F,EAkDlBmF,sBAAwB,SAACQ,GACrB3F,EAAKM,SAAS,CAAC2E,WAAYU,EAAWV,WAAYD,eAAgBW,EAAWX,eAAgB7B,QAASwC,EAAWxC,WAhDjHnD,EAAKU,MAAQ,CACTkF,cAAc,EACdjD,iBAAiB,EACjBoD,eAAe,EACfD,mBAAmB,EACnB/E,MAAO,GACPmB,UAAW,GACXE,SAAU,GACVE,YAAa,GACbE,SAAU,GACVE,YAAa,GACbuC,YAAY,EACZD,gBAAgB,EAChB7B,QAAS,GACT9B,cAAc,GAjBJrB,wEAsDT,IAAAiE,EAAA5E,KACL,OACQV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACmH,EAAD,MACIrH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAA9G,GAAK,OAAIX,EAAAC,EAAAC,cAACwH,EAADpG,OAAAqG,OAAA,GAAehH,EAAf,CAAsBmB,eAAgBwD,EAAKxD,qBAClF9B,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOE,KAAK,cAAcC,OAAQ,SAAA9G,GAAK,OAAIX,EAAAC,EAAAC,cAAC0H,EAADtG,OAAAqG,OAAA,GAAgBhH,EAAhB,CAAuBsD,mBAAoBqB,EAAKrB,yBAC3FjE,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,OAAQ,SAAA9G,GAAK,OAAIX,EAAAC,EAAAC,cAAC2H,EAADvG,OAAAqG,OAAA,GAAmBhH,EAAnB,CAA0B6F,sBAAuBlB,EAAKkB,4BACpGxG,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOE,KAAK,YAAYM,UAAWjB,IACjCnG,KAAKqB,MAAMoF,mBAAqBzG,KAAKqH,oBACH,cAAjCrH,KAAKC,MAAMqH,SAASC,UAA6D,gBAAjCvH,KAAKC,MAAMqH,SAASC,WAA+BvH,KAAKwH,cACzGxH,KAAKqB,MAAMqF,eAAiB1G,KAAKyH,sBACjCzH,KAAKqB,MAAMW,cAAgBhC,KAAK0H,qBACtCpI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8DAM9B,OAAOH,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAUC,GAAG,yDAIpB,MAAoC,gBAAjC5H,KAAKC,MAAMqH,SAASC,SACZjI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAUC,GAAG,gBAEb,mDAKX,MAAoC,mBAAjC5H,KAAKC,MAAMqH,SAASC,SACZjI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAUC,GAAG,mBAEb,2CAKX,OAAQtI,EAAAC,EAAAC,cAAA,OAAKC,UAA4C,cAAjCO,KAAKC,MAAMqH,SAASC,SAA2B,aAAe,2BAA9E,0CAAgJjI,EAAAC,EAAAC,cAAA,KAAGiD,KAAK,KAAR,8BA9F9H5C,6BCH5BgI,EACFvI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,KACIxI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOE,KAAK,IAAIM,UAAWW,MAKvCC,IAASjB,OAAOc,EAASI,SAASC,eAAe","file":"static/js/main.6c5744f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ct-radio-selected.172cb532.svg\";","module.exports = __webpack_public_path__ + \"static/media/ct-radio-deactivated.52a5186c.svg\";","module.exports = __webpack_public_path__ + \"static/media/vm-logo-primary.0faacd91.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-clear.2575dd7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-large-email-generic.032abe26.svg\";","import React, { Component } from 'react'\nimport logo from '../assets/vm-logo-primary.svg'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <div className=\"logo\">\n                    <img src={logo} className=\"logo-img\" alt=\"logo\"/>\n\n                </div>\n                <div className=\"account-check\" >\n                    <span className=\"text\">\n                        Already have an account?\n\n                    </span>\n                </div>\n                <button className=\"log-in\">\n                    Log in\n\n                </button>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport clear from '../assets/ic-clear.svg'\nimport emailGeneric from '../assets/ic-large-email-generic.svg'\n\nexport default class InvitedAlert extends Component{\n\n    render(){\n        return (\n            <div className=\"familiar-alert\">\n            <span onClick={this.props.onInvitedAlertClose}>\n                <div className=\"close\">\n                    <div className=\"close-text\">\n                        Close\n                    </div>\n                    <img src={clear} className=\"close-x\" alt=\"close x\"></img>\n                </div>\n            </span>\n                <div className=\"check-email-icon\">\n                    <img src={emailGeneric} className=\"email-icon\" alt=\"email icon\"></img>\n                </div>\n                <h2 className=\"familiar-header\">\n                    That looks familiar\n                </h2>\n                <div className=\"familiar-text\">\n                    That email looks like it's part of an exisiting company. Check your email for an invite to your company\n                </div>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react'\n\nexport default class PersonalAlert extends Component{\n\n    render(){\n        return(\n            <div className=\"personal-alert\">\n                <h2 className=\"personal-header\">\n                    That looks lke a personal email\n                </h2>\n                <div className=\"personal-text\">\n                    Press continue to create a new team, or go back to try finding your team instead.\n                </div>\n                <div className=\"personal-buttons\">\n                    <button type=\"submit\" value=\"Next\" className=\"personal-button-back\" onClick={this.props.onPersonalEmailBack}>\n                                <span className=\"personal-button-back-text\">\n                                    Back\n                                </span>\n                    </button>\n                    <button type=\"submit\" value=\"Next\" className=\"personal-button-continue\" onClick={this.props.onPersonalEmailConfirm}>\n                                <span className=\"personal-button-continue-text\">\n                                    Continue\n                                </span>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport InvitedAlert from './invited-alert'\nimport PersonalAlert from './personal-alert'\n\nexport default class Form extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            email: '',\n            submitted: false,\n            alreadyInvited: false,\n            alreadySignedUp: false,\n            personalEmail: false,\n            continuePersonal: false,\n            joinTeamTest: false,\n        }\n\n    }\n\n    onPersonalEmailConfirm = () => {\n        this.setState({personalEmail: false})\n        this.setState({continuePersonal: true})\n        this.props.onEmailEntered(this.state)\n    }\n\n    onPersonalEmailBack = () => {\n        this.setState({personalEmail: false})\n    }\n\n    onEmailChange = (e) => {\n        console.log(this.props)\n        this.setState({ email: e.target.value })\n        this.setState({alreadySignedUp: false})\n\n    }\n\n    onInvitedAlertClose = () => {\n        this.setState({alreadyInvited: false});\n    }\n\n\n    onButtonPress = (e) => {\n        e.preventDefault();\n        switch(this.state.email){\n            case 'invited@email.com':\n                this.setState({alreadyInvited: true})\n                break;\n            case 'user@email.com':\n                this.setState({alreadySignedUp: true})\n                break;\n            case 'jointeam@test.com':\n                this.setState({joinTeamTest: true})\n            case 'user@personal.com':\n                if(this.state.continuePersonal){\n                    this.props.onEmailEntered(this.state)\n                } else {\n                    this.setState({personalEmail: true})\n                };\n                break;\n            default:\n                this.props.onEmailEntered(this.state)   \n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"form\">\n                <div className=\"form-content\">\n                    <div className=\"prompt\">\n                        <h2>Get Started on VidMob</h2>\n                        <p>Enter your work email.</p>\n                    </div>\n                    <div className=\"input\">\n                        {this.state.alreadySignedUp && this.renderEmailTakenAlert()}\n                        <form onSubmit={this.onSubmit}>\n                            <label>\n                                <input type=\"text\" placeholder=\"name@company.com\" className=\"email-input\" value={this.state.email} onChange={this.onEmailChange}/>\n                            </label>\n                            <button type=\"submit\" value=\"Next\" className=\"email-input-next\" onClick={this.onButtonPress}>\n                                <span className=\"next-button-text\">\n                                    Next\n                                </span>\n                            </button>\n                        </form>\n                    </div>\n                </div>\n                { this.state.alreadyInvited && this.renderInvited() }\n                { this.state.alreadyInvited || this.state.personalEmail ? <div className=\"alert-overlay\"></div> : null}\n                { this.state.personalEmail && this.renderPersonal() }\n\n            </div>\n        )\n    }\n\n    renderInvited(){\n        return <InvitedAlert onInvitedAlertClose = {this.onInvitedAlertClose }/>;\n    }\n\n    renderEmailTakenAlert(){\n        return(\n            <div className=\"email-taken-error\">\n                <div className=\"email-taken-error-text\">\n                    That email looks like it's already taken. Do you want to <a href=\"/\">login</a> or <a href=\"/\">reset your password</a>?\n                </div>\n            </div>\n        )\n    }\n\n    renderPersonal(){\n        return <PersonalAlert onPersonalEmailConfirm= { this.onPersonalEmailConfirm } onPersonalEmailBack={ this.onPersonalEmailBack }/>\n    }\n\n}","import React, { Component } from 'react'\n\nexport default class GetStarted extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            existingCompany: false,\n            firstName: '',\n            lastName: '',\n            displayName: '',\n            password: '',\n            companyName: '',\n        }\n\n    }\n\n    onFirstNameChange = (e) => {\n        this.setState({ firstName: e.target.value })\n    }\n\n    onLastNameChange = (e) => {\n        this.setState({ lastName: e.target.value })\n    }\n\n    onDisplayNameChange = (e) => {\n        this.setState({ displayName: e.target.value })\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({password: e.target.value})\n    }\n\n    onCompanyNameChange = (e) => {\n        this.setState({companyName: e.target.value})\n        if(e.target.value === 'Existing Company'){\n            this.setState({existingCompany: true})\n        } else {\n            this.setState({existingCompany: false});\n        }\n    }\n\n    onSubmit= (e) => {\n        e.preventDefault();\n        this.props.onGetStartedSubmit(this.state);\n    }\n\n\n    render(){\n        return(\n                <div className=\"get-started-form\">\n                    <div className=\"get-started-form-content\">\n                        <div className=\"get-started-prompt\">\n                            <h2>Get started on VidMob</h2>\n                            <p>Your email wasn't associated with an existing company. Fill out the information below to create a new one.</p>\n                        </div>\n                        <div className=\"get-started-input\">\n                            {this.state.existingCompany && this.renderCompanyExistsAlert()}\n                            <form onSubmit={this.onSubmit}>\n                                <input type=\"text\" className=\"name-input\" placeholder=\"First Name\" value={this.state.firstName} onChange={this.onFirstNameChange}></input>\n                                <input type=\"text\" className=\"name-input\" placeholder=\"Last Name\" value={this.state.lastName} onChange={this.onLastNameChange}></input>\n                                <input type=\"text\" className=\"display-name\" placeholder=\"Display Name                                         (optional)\" value={this.state.displayName} onChange={this.onDisplayNameChange}></input>\n                                <input type=\"password\" className=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onPasswordChange}></input>\n                                <input type=\"text\" className=\"company-name\" placeholder=\"Company Name\" value={this.state.companyName} onChange={this.onCompanyNameChange}></input>\n                                <div className=\"signup-button-div\">\n                                    <button type=\"submit\" value=\"Sign Up\" className=\"get-started-signup\" disabled={ this.state.existingCompany ? true : false}>\n                                        <span className=\"get-started-signup-text\">\n                                            Sign Up\n                                        </span>\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n\n    renderCompanyExistsAlert(){\n        return(\n            <div className=\"company-exists-error\">\n                <div className=\"company-exists-error-text\">\n                    That company looks like it already exists. Try to <a href=\"/\">Find My Team</a> using your work email.\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class DomainInput extends Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            domains: []\n        }\n    }\n\n    inputKeyDown = (e) => {\n        console.log(this.props)\n        const val = e.target.value;\n        if(e.key === 'Enter' && val){\n            if(this.state.domains.find(domain => domain.toLowerCase() === val.toLowerCase())){\n                return;\n            }\n            let newStateDomains = [...this.state.domains, val];\n\n            this.setState({domains: newStateDomains});\n            this.domainInput.value = null;\n            this.props.onDomainArrChange(newStateDomains);\n        } else if(e.key === 'Backspace' && !val) {\n            this.removeDomain(this.state.domains.length - 1);\n        }\n    }\n\n    removeDomain = (i) => {\n        const newDomains = [...this.state.domains];\n        newDomains.splice(i,1);\n        this.setState({domains: newDomains});\n        this.props.onDomainArrChange(newDomains);\n    }\n\n\n    render(){\n        return(\n            <div className=\"domain-input\">\n                <ul className=\"domain-list\">\n                    { this.state.domains.map((domain, i) => { \n                                let conditionalItemClass;\n                                if(i === this.state.domains.length - 1 ){\n                                    conditionalItemClass = 'last-line-item';\n                                } else {\n                                    conditionalItemClass = '';\n                                }\n                                return(\n                                    <li className={\"domain-list-item \" + conditionalItemClass} key={domain}>\n                                        <div className=\"domain-list-item-content\">\n                                            <div className=\"list-item-text\">{domain}</div>\n                                            <div className=\"remove-button\" onClick={() => { this.removeDomain(i); }}>\n\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path className=\"svg-remove-button\" d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5 15.538l-3.592-3.548 3.546-3.587-1.416-1.403-3.545 3.589-3.588-3.543-1.405 1.405 3.593 3.552-3.547 3.592 1.405 1.405 3.555-3.596 3.591 3.55 1.403-1.416z\"/></svg>\n                                            </div>\n                                        </div>\n                                    </li>\n                                ) \n                            } \n                        )  \n                    }\n                    <input \n                        type=\"text\" \n                        className={this.state.domains.length === 0 ? 'domain-text-input-always-show' : 'domain-text-input'}\n                        placeholder={this.state.domains.length === 0 ? 'Enter one or more domain...' : ''}\n                        id={this.state.domains.length > 1 && this.state.domains.length%2 === 0 ? 'input-alone-bottom-row' : 'test'}\n                        onKeyDown={this.inputKeyDown} \n                        ref={ c => this.domainInput = c} \n                        disabled={this.props.emailIsSelected ? false : true}\n                    />\n                </ul>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport radioSelected from '../assets/ct-radio-selected.svg';\nimport radioDeactivated from '../assets/ct-radio-deactivated.svg';\nimport DomainInput from './domain-input';\n\nexport default class CompanySignup extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            inviteOnly: false,\n            anyFromDomains: true,\n            domains: []\n        }\n\n    }\n\n    onSelectDomains = (e) => {\n        this.setState({anyFromDomains: true, inviteOnly: false})\n    }\n\n    onSelectInviteOnly = (e) => {\n        this.setState({anyFromDomains: false, inviteOnly: true})\n\n    }\n\n    onDomainArrChange = (domains) => {\n        console.log(domains)\n        this.setState({domains: domains});\n    }\n\n    onSubmit = (e) => {\n        this.props.onCompanySignupSubmit(this.state);\n    }\n\n    render(){\n        return(\n            <div className=\"company-signup-form\">\n                <div className=\"company-signup-form-content\">\n                    <div className=\"company-signup-prompt\">\n                        <h2>Company sign up mode</h2>\n                        <p>Anyone with a specified email domain can join your team. Otherwise, and owner or co-owner will have to invite all team members.</p>\n                    </div>\n                    <div className=\"company-signup-input\">\n                        <div className=\"any-email\">\n                            <img \n                                src={this.state.anyFromDomains ? radioSelected : radioDeactivated} \n                                className={this.state.fromAnyDomains ? \"radio-selected-email\" : \"radio-deactivated-email\"} \n                                onClick={this.onSelectDomains} \n                                alt={this.state.anyFromDomains ? \"radio selected\" : \"radio deactivated\"}\n                            />\n                            <div className={this.state.anyFromDomains ? \"any-domain-text-selected\":\"any-domain-text\"}>\n                                Any email from my domains\n                            </div>\n                        </div>\n                            <DomainInput emailIsSelected={this.state.anyFromDomains} onDomainArrChange={this.onDomainArrChange}/>\n                        <div className=\"invite-only-input\">\n                            <img \n                                src={this.state.inviteOnly ? radioSelected : radioDeactivated} \n                                className={this.state.inviteOnly ? \"radio-selected-invite\" : \"radio-deactivated-invite\"} \n                                onClick={this.onSelectInviteOnly}\n                                alt={this.state.inviteOnly ? \"radio selected\" : \"radio deactivated\"}\n                            />\n                            <div className={this.state.inviteOnly ? \"invite-only-text-selected\" : \"invite-only-text\"}>\n                                Invite only\n                            </div>\n                        </div>\n                        <div className=\"company-signup-done-div\">\n                            <button type=\"submit\" value=\"Done\" className=\"company-signup-done\" onClick={this.onSubmit} disabled={this.state.anyFromDomains && this.state.domains.length === 0 ? true : false}>\n                                <span className=\"company-signup-done-text\">\n                                    Done\n                                </span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class JoinTeam extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            displayName: '',\n            password: ''\n        }\n\n    }\n\n    onFirstNameChange = (e) => {\n        this.setState({ firstName: e.target.value })\n    }\n\n    onLastNameChange = (e) => {\n        this.setState({ lastName: e.target.value })\n    }\n\n    onDisplayNameChange= (e) => {\n        this.setState({ displayName: e.target.value })\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({password: e.target.value})\n    }\n\n    render(){\n        return(\n\n                <div className=\"join-team-form\">\n                    <div className=\"join-team-form-content\">\n                        <div className=\"join-team-prompt\">\n                            <h2>Join the VidMob team</h2>\n                            <p>Your email is associated with an existing company. Fill out the information below to finish the setup</p>\n                        </div>\n                        <div className=\"join-team-input\">\n                            <form>\n                                <input type=\"text\" className=\"name-input\" placeholder=\"First Name\" value={this.state.firstName} onChange={this.onFirstNameChange}></input>\n                                <input type=\"text\" className=\"name-input\" placeholder=\"Last Name\" value={this.state.lastName} onChange={this.onLastNameChange}></input>\n                                <input type=\"text\" className=\"display-name\" placeholder=\"Display Name                                         (optional)\" value={this.state.displayName} onChange={this.onDisplayNameChange}></input>\n                                <input type=\"password\" className=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onPasswordChange}></input>\n                                <div className=\"signup-button-div\">\n                                    <button type=\"submit\" value=\"Sign Up\" className=\"join-team-signup\">\n                                        <span className=\"join-team-signup-text\">\n                                            Sign Up\n                                        </span>\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Header from './header';\nimport EmailForm from './email-form';\nimport GetStarted from './get-started';\nimport CompanySignup from './company-sign-up';\nimport JoinTeam from './join-team';\nimport { Redirect } from 'react-router';\nimport { Route, Switch, Link, HashRouter as Router } from 'react-router-dom';\n\nexport default class Root extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            emailEntered: false,\n            existingCompany: false,\n            companySignup: false,\n            nonExistingSignup: false,\n            email: '',\n            firstName: '',\n            lastName: '',\n            displayName: '',\n            password: '',\n            companyName: '',\n            inviteOnly: false,\n            anyFromDomains: false,\n            domains: [],\n            joinTeamTest: false\n        }\n\n    }\n\n    isExistingCompany = () => {\n        this.setState({existingCompany: true});\n    }\n\n    onEmailEntered = (childState) => {\n        this.setState({emailEntered: true, email: childState.email});\n        if(!childState.alreadyInvited && !childState.alreadySignedup){\n            this.setState({nonExistingSignup: true});\n        } \n        if(childState.joinTeamTest){\n            this.setState({joinTeamTest: true, nonExistingSignup: false, companySignup: false});\n        }\n    }\n\n    onGetStartedSubmit = (childState) => {\n        this.setState(\n            {\n                firstName: childState.firstName,\n                lastName: childState.lastName,\n                displayName: childState.displayName,\n                password: childState.password,\n                companyName: childState.companyName,\n                companySignup: true,\n                nonExistingSignup: false\n            }\n        )\n    }\n\n    onCompanySignupSubmit = (childState) => {\n        this.setState({inviteOnly: childState.inviteOnly, anyFromDomains: childState.anyFromDomains, domains: childState.domains })\n    }\n\n    render() {\n        return (\n                <div className=\"background\">\n                    <Header />\n                        <Route exact path=\"/\" render={props => <EmailForm {...props} onEmailEntered={this.onEmailEntered}/> }/>\n                        <Route path=\"/getStarted\" render={props => <GetStarted {...props} onGetStartedSubmit={this.onGetStartedSubmit}/> }/>\n                        <Route path=\"/companySignup\" render={props => <CompanySignup {...props} onCompanySignupSubmit={this.onCompanySignupSubmit} />}/>\n                        <Route path=\"/jointeam\" component={JoinTeam} />\n                        { this.state.nonExistingSignup && this.renderGetStarted() }\n                        { (this.props.location.pathname === '/jointeam' || this.props.location.pathname === '/getStarted') && this.renderTerms() }\n                        { this.state.companySignup && this.renderCompanySignup() }\n                        { this.state.joinTeamTest && this.renderJoinTeamTest() }\n                    <button className=\"chat-button\"></button>\n                </div>\n        )\n    }\n\n    renderJoinTeamTest(){\n        return(<Redirect to=\"/jointeam\"/>)\n    }\n\n    renderGetStarted(){\n        if(this.props.location.pathname !== '/getStarted'){\n            return(<Redirect to=\"/getStarted\"/>)\n        } else {\n            return null\n        }\n    }\n\n    renderCompanySignup(){\n        if(this.props.location.pathname !== '/companySignup'){\n            return(<Redirect to=\"/companySignup\"/>)\n        } else {\n            return null\n        }\n    }\n\n    renderTerms(){\n        return (<div className={this.props.location.pathname === '/jointeam' ? 'terms-link' : \"terms-link-non-existing\"}>By selecting Sign Up, you agree to our <a href=\"/\">Terms & Conditions</a></div>)\n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Index from './containers/index';\nimport './index.scss';\nimport { Route, HashRouter as Router } from 'react-router-dom';\n\nconst routing = (\n    <Router>\n        <div>\n            <Route path=\"/\" component={Index}/>\n        </div>\n    </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}